<launch>
    <!-- Robot namespace -->
    <arg name="robot_name" default="my_gen3"/>
    <arg name="start_delay_seconds" default="1"/>

    <!--Set parameters required for normal usage-->
    <group ns="detection_parameters">
        <rosparam file="$(find computation)/config/perception.yaml" />
    </group>

    <group ns="manipulation_parameters">
        <rosparam file="$(find computation)/config/manipulation.yaml" />
    </group>
    <!-- Launch Moveit node in charge of execute movements-->
    <node name="cotton_move_it_trajectories" pkg="kortex_examples" type="cotton_moveit_trajectories.py" ns="$(arg robot_name)" output="screen" launch-prefix="xterm -fa 'Monospace' -fs 15 -e"  >
    </node>

    <!-- Launch Manipulation State Machine module (retrieve depth and location of cotton)-->
    <!--node name="capture_node" pkg="computation" type="capture_node.py" output="screen" launch-prefix="xterm -fa 'Monospace' -fs 15 -e" >
    </node-->

    <!-- Launch Manipulation State Machine module (retrieve depth and location of cotton)-->
    <node name="manipulation_state_machine" pkg="computation" type="manipulation_stateMachine.py" output="screen" launch-prefix="xterm -fa 'Monospace' -fs 15 -e" >
    </node>

    <!-- Launch Perception State Machine module (retrieve depth and location of cotton)-->
    <node name="perception_state_machine" pkg="computation" type="perception_stateMachine.py" output="screen" launch-prefix="bash -c 'sleep $(arg start_delay_seconds); $0 $@' ">
    </node>

    <!--Launch gazebo Kinova Kortex --> 
    <!--include file="$(find kortex_gazebo)/launch/spawn_kortex_robot.launch"/-->
    
    <!-- Launch the example in that namespace -->
    <!--<node name="cotton_kinova_robot_movement" pkg="computation" type="kinovamovement.py" output="screen" launch-prefix="bash -c 'sleep $(arg start_delay_seconds); $0 $@' ">
        <param name="robot_name" value="$(arg robot_name)"/>
    </node>-->
</launch>